type Edge is ({int from, int to} r)

define contains(Edge[] es, int from, int to) is:
    exists(int i):
        i >= 0
        i < |es|
        es[i].from == from
        es[i].to == to

define Closed(Edge[] es) is:
  forall(int x, int y, int z):
    if:
      contains(es,x,y)
      contains(es,y,z)
    then:
      contains(es,x,z)

assert:
    Closed([{from: 1, to: 2},
            {from: 2, to: 3}])
