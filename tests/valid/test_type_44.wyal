type nat is (int n)
where:
    n >= 0

type T is (int|(int[]) self)

assert "type invariant not satisfied":
    forall(T x):
        if:
            x is (int[])|nat
        then:
            0 is int

assert "type invariant not satisfied":
    forall(T x, !(int[])&!(nat)&T y):
        if:
            y == x
            x is !((int[])|nat)
        then:
            y is int
