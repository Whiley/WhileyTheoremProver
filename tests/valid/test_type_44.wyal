type nat is (int n)
where:
    n >= 0


type T is (int|(int[]) this)


function f(TypeEquals_Valid_47.T x) -> (int $)

assert "type invariant not satisfied":
    forall(T x):
        if:
            x is (int[])|nat
        then:
            0 is int


assert "type invariant not satisfied":
    forall(T x, !(int[])&!nat&T x$1):
        if:
            x$1 == x
            x is !((int[])|nat)
        then:
            x$1 is int
