type PieceKind is (int x)
where:
    (0 <= x) && (x <= 5)

type Piece is ({bool colour, PieceKind kind} this)
type RowCol is (int this)
type Pos is ({RowCol col, RowCol row} this)
// Move
type SingleMove is ({Pos from, Piece piece, Pos to} this)
type SingleTake is ({Pos from, Piece piece, Piece taken, Pos to} this)
type Move is (SingleMove|SingleTake this)

assert:
    forall((Move&SingleTake) m):
        m.taken is Piece
