type nat is (int x)
where:
    x >= 0


type Cash is (nat[] coins)
where:
    |coins| == |[1, 5, 10, 20, 50, 100, 500, 1000]|


function Cash(nat[] coins) -> (Cash $)

assert "type invariant not satisfied":
    if:
        true
    then:
        Cash([5, 1]) is Cash


