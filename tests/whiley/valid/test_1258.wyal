type Link is ({int data, LinkedList next} self)


type LinkedList is (null|Link self)


function sum(LinkedList l) -> (int $)

assert "type invariant not satisfied":
    forall(LinkedList l2, LinkedList l3, LinkedList l1):
        if:
            l1 == {data: 1, next: null}
            l2 == {data: 2, next: l1}
            l3 == {data: 3, next: l2}
            sum(l1) == 1
        then:
            l2 is LinkedList


