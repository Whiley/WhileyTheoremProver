type LinkedList is (null|{int data, LinkedList next} self)


type Reducer is (any self)


function apply(Reducer r, LinkedList l) -> (int $)

assert "type invariant not satisfied":
    forall(LinkedList l5, LinkedList l2, LinkedList l3, LinkedList l4, any $25$1, any $19$1, LinkedList l1):
        if:
            l1 == null
            l2 == {data: 1, next: l1}
            l3 == {data: -1, next: l2}
            l4 == {data: 10, next: l3}
            l5 == {data: 3, next: l4}
            apply($19$1, l1) == 0
            apply($25$1, l2) == 1
        then:
            l3 is LinkedList


