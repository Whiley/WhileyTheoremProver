type Expr is (int|BinOp|Var self)


type BinOp is ({Expr lhs, Expr rhs} self)


type Var is ({int[] id} self)


type SyntaxError is ({int[] err} self)


type SExpr is (Expr|SyntaxError self)


function build(int i) -> (Expr $)

assert "type invariant not satisfied":
    forall(int i):
        if:
            i <= 20
        then:
            build(i) is SExpr


