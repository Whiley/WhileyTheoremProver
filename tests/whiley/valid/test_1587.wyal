type tenup is (int self)


type msg1 is ({int[] data, tenup op} self)


type msg2 is ({int index} self)


type msgType is (msg1|msg2 self)


function f(msgType m) -> (msgType $)

assert "type invariant not satisfied":
    forall(msg2 m2, msg1 m1):
        if:
            m1 == {data: [0;0], op: 11}
            m2 == {index: 1}
            f(m1) == {data: [0;0], op: 11}
        then:
            m2 is msgType


