type nat is (int x)
where:
    x >= 0


function init(nat length, int value) -> (int[] result)

define init_ensures_0(nat length, int value, int[] result) is:
    |result| == length


define init_ensures_1(nat length, int value, int[] result) is:
    forall(int i):
        ((0 <= i) && (i < |result|)) ==> (result[i] == value)


assert "type invariant not satisfied":
    if:
        init_ensures_0(0, 0, init(0, 0))
        init_ensures_1(0, 0, init(0, 0))
        init(0, 0) == [0;0]
    then:
        1 is nat


