type char is (int x)
where:
    (0 <= x) && (x <= 255)


type State is ({char[] input, int pos} s)
where:
    s.pos >= 0


function isDigit(char c) -> (bool $)

define parseNumber_loopinvariant_8(State st) is:
    st.pos >= 0


assert "loop invariant not restored":
    forall(int n$2, State st$2, int n$1, State st$1, int n):
        if:
            n == 0
            parseNumber_loopinvariant_8(st$1)
            (st$1.pos < |st$1.input|) && isDigit(st$1.input[st$1.pos])
            n$2 == (n$1 + (st$1.input[st$1.pos] - 48))
            st$2 == st$1{pos:=st$1.pos + 1}
        then:
            parseNumber_loopinvariant_8(st$2)


