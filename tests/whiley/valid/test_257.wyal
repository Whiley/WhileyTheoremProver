type nat is (int x)
where:
    x >= 0


define abs_requires_0(int[] items) is:
    |items| > 0


define abs_requires_0(int[] items, nat index) is:
    (index <= |items|) && forall(int i).(((0 <= i) && (i < index)) ==> (items[i] >= 0))


assert "index out of bounds (not less than length)":
    forall(nat index, int[] items):
        if:
            abs_requires_0(items, index)
            index != |items|
        then:
            index < |items|


