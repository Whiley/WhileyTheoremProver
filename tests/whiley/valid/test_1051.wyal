type Actor is ({int data} self)


function createActor(int n) -> (&*:Actor $)

define createActors_requires_0(int n) is:
    n >= 0


define createActors_loopinvariant_19(int n, &*:Actor[] row, int j) is:
    (j >= 0) && (|row| == n)


assert "type invariant not satisfied":
    forall(&*:Actor[] row, int j, &*:Actor[] row$1, int j$1, int n):
        if:
            createActors_requires_0(n)
            row == [createActor(0);n]
            j == 1
            createActors_loopinvariant_19(n, row$1, j$1)
            j$1 < n
        then:
            createActor(j$1) is &*:Actor


